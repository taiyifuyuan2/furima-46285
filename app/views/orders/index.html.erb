<%= render "shared/second-header" %>

<div class='transaction-contents'>
  <div class='transaction-main'>
    <h1 class='transaction-title-text'>
      購入内容の確認
    </h1>
    <%# 購入する商品の情報 %>
    <div class='buy-item-info'>
      <%= image_tag @item.image, class: 'buy-item-img' %>
      <div class='buy-item-right-content'>
        <h2 class='buy-item-text'>
          <%= @item.name %>
        </h2>
        <div class='buy-item-price'>
          <p class='item-price-text'>¥<%= @item.price %></p>
          <p class='item-price-sub-text'><%= @item.shipping_fee_burden.name %></p>
        </div>
      </div>
    </div>
    <%# /購入する商品の情報 %>

    <%# 支払額の表示 %>
    <div class='item-payment'>
      <h1 class='item-payment-title'>
        支払金額
      </h1>
      <p class='item-payment-price'>
        ¥<%= @item.price %>
      </p>
    </div>
    <%# /支払額の表示 %>

    <%= form_with model: @purchase_form, url: item_orders_path(@item), local: true, class: 'transaction-form-wrap', id: 'charge-form' do |form| %>
      <%= render 'shared/error_messages', model: @purchase_form %>
      <%# カード情報の入力 %>
      <div class='credit-card-form'>
        <h1 class='info-input-haedline'>
          クレジットカード情報入力
        </h1>
        <div class="form-group">
          <div class='form-text-wrap'>
            <label class="form-text">カード番号</label>
            <span class="indispensable">必須</span>
          </div>
          <div id="number-form" class="input-default"></div>
        </div>
        <div class="form-group">
          <div class='form-text-wrap'>
            <label class="form-text">有効期限</label>
            <span class="indispensable">必須</span>
          </div>
          <div class='input-expiration-date-wrap'>
            <div id="expiry-form" class="input-default"></div>
          </div>
        </div>
        <div class="form-group">
          <div class='form-text-wrap'>
            <label class="form-text">セキュリティコード</label>
            <span class="indispensable">必須</span>
          </div>
          <div id="cvc-form" class="input-default"></div>
        </div>
      </div>
      <%# /カード情報の入力 %>

      <%# 配送先の入力 %>
      <div class='shipping-address-form'>
        <h1 class='info-input-haedline'>
          配送先入力
        </h1>
        <div class="form-group">
          <div class='form-text-wrap'>
            <label class="form-text">郵便番号</label>
            <span class="indispensable">必須</span>
          </div>
          <%= form.text_field :postal_code, class:"input-default", id:"postal-code", placeholder:"例）123-4567", maxlength:"8" %>
        </div>
        <div class="form-group">
          <div class='form-text-wrap'>
            <label class="form-text">都道府県</label>
            <span class="indispensable">必須</span>
          </div>
          <%= form.collection_select :prefecture_id, Prefecture.all, :id, :name, {}, class:"select-box", id:"prefecture" %>
        </div>
        <div class="form-group">
          <div class='form-text-wrap'>
            <label class="form-text">市区町村</label>
            <span class="indispensable">必須</span>
          </div>
          <%= form.text_field :city, class:"input-default", id:"city", placeholder:"例）横浜市緑区"%>
        </div>
        <div class="form-group">
          <div class='form-text-wrap'>
            <label class="form-text">番地</label>
            <span class="indispensable">必須</span>
          </div>
          <%= form.text_field :street_address, class:"input-default", id:"addresses", placeholder:"例）青山1-1-1"%>
        </div>
        <div class="form-group">
          <div class='form-text-wrap'>
            <label class="form-text">建物名</label>
            <span class="form-any">任意</span>
          </div>
          <%= form.text_field :building_name, class:"input-default", id:"building", placeholder:"例）柳ビル103"%>
        </div>
        <div class="form-group">
          <div class='form-text-wrap'>
            <label class="form-text">電話番号</label>
            <span class="indispensable">必須</span>
          </div>
          <%= form.text_field :phone_number, class:"input-default", id:"phone-number", placeholder:"例）09012345678",maxlength:"11"%>
        </div>
      </div>
      <%# /配送先の入力 %>
      <div class='buy-btn'>
        <%= form.submit "購入" ,class:"buy-red-btn", id:"button" %>
      </div>
    <% end %>
  </div>
</div>

<%= render "shared/second-footer" %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('DOMContentLoaded event fired for orders page');
  
  // PAY.JPライブラリが読み込まれているかチェック
  if (typeof Payjp === 'undefined') {
    console.log('Payjp is not defined');
    return;
  }
  
  // PAY.JPの公開鍵が設定されているかチェック
  if (!window.PAYJP_PUBLIC_KEY) {
    console.log('PAYJP_PUBLIC_KEY is not set');
    return;
  }

  console.log('PAYJP_PUBLIC_KEY:', window.PAYJP_PUBLIC_KEY);

  try {
    // PAY.JPの正しい使用方法：Payjpコンストラクタを使用
    const payjp = Payjp(window.PAYJP_PUBLIC_KEY);
    console.log('Payjp instance created');
    
    const elements = payjp.elements();
    
    const numberElement = elements.create('cardNumber');
    const expiryElement = elements.create('cardExpiry');
    const cvcElement = elements.create('cardCvc');

    // フォーム要素が存在するかチェック
    const numberForm = document.getElementById("number-form");
    const expiryForm = document.getElementById("expiry-form");
    const cvcForm = document.getElementById("cvc-form");

    console.log('Form elements found:', { numberForm, expiryForm, cvcForm });

    if (numberForm && expiryForm && cvcForm) {
      numberElement.mount('#number-form');
      expiryElement.mount('#expiry-form');
      cvcElement.mount('#cvc-form');
      console.log('Card elements mounted successfully');
    } else {
      console.log('Required form elements not found');
      return;
    }

    const form = document.getElementById("charge-form");
    if (form) {
      form.addEventListener("submit", (e) => {
        e.preventDefault();
        console.log('Form submission intercepted');

        payjp.createToken(numberElement).then(function (response) {
          if (response.error) {
            console.log('Token creation error:', response.error);
          } else {
            console.log('Token created successfully:', response.id);
            const token = response.id;
            const renderDom = document.getElementById("charge-form");
            const tokenObj = `<input value=${token} name='purchase_form[token]' type="hidden"> `;
            renderDom.insertAdjacentHTML("beforeend", tokenObj);
            
            numberElement.clear();
            expiryElement.clear();
            cvcElement.clear();
            
            document.getElementById("charge-form").submit();
          }
        });
      });
      console.log('Form submit event listener added');
    }
  } catch (error) {
    console.log('Error in pay function:', error);
  }
});
</script>